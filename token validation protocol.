Complete Validation Process for an rc001 Mint Token

To ensure the validity of an rc001 mint token, follow this step-by-step process. This process guarantees that the mint token is authentic, properly linked to the collection, and that the payment has been made correctly.

1. Verify the Mint Token Inscription:

	•	Check the Transaction:
	•	Validate Metadata:
	•	The mint token HTML should contain:
	•	Protocol identifier: <meta name="p" content="rc001">
	•	Operation type: <meta name="op" content="mint">
	•	Unique serial number: <meta name="sn" content="000002">
	•	Parent inscription ID: <meta name="parent_inscription_id" content="<parent_inscription_id>">
	•	Ensure all required metadata fields are present and correctly formatted.

2. Confirm the Parent Inscription:

	•	Verify the Parent Inscription ID and collection name:
	•	Extract the parent_inscription_id, and collection name from the mint token HTML.
	•	Compare it with the parent inscription ID, and collection name defined in the deploy.html file.
	•	If the IDs, and names match, the mint token is part of the correct collection.

3. Check the Serial Number (SN):

	•	Validate the Serial Number (SN):
	•	The sn value in the mint token must be unique. It should not have been used in any previous mint token inscription.
	•	Verify that the sn falls within the valid ranges defined in deploy.html (e.g., "sn": [{"range": "00-10"}, {"range": "00-99"}]).

4. Validate the Mint Payment:

	•	Check the Payment Output:
	•	Retrieve the mint transaction details.
	•	Ensure that there is an output paying the exact mint price to the specified mint address.
	•	The mint_address and mint_price are defined in deploy.html.
Example:
	•	Mint price: 1 DOGE
	•	Mint address: DQ3a4aYzF7vVwNUKo1xZxG1iDZYvXN7x2d
	•	Verify that an output exists with:
	•	Recipient address: The mint address (DQ3a4aYzF7vVwNUKo1xZxG1iDZYvXN7x2d).
	•	Amount: The exact mint price (1 DOGE).

5. Confirm Change Output:

	•	Check for Change Output:
	•	Ensure that the input (vin) of the mint transaction includes the change output from the payment transaction.
	•	The number of valid mints is based upon the amount sent to the mint address defined in the deploy HTML.

7. Confirm the Mint Token Inscription Completeness:

	•	Ensure Proper Inscription Format:
	•	Verify that the mint token HTML file is inscribed with the correct MIME type (text/html).
	•	Check that all required fields are present and filled out (e.g., title, metadata tags).

8. Cross-Check the Collection Database (Optional but Recommended):

	•	Check the Collection Database:
	•	If your collection is being indexed or tracked in a public database (e.g., Blockchain Plugz), ensure that the mint token is registered and not duplicated.
	•	This helps prevent double minting and ensures consistency.

Summary Checklist:

To validate an rc001 mint token:
	2.	Does it have valid metadata (protocol identifier, operation type, serial number, parent inscription ID)?
	3.	Is the parent inscription ID correct?
	4.	Is the serial number unique and within the valid range?
	5.	Was the mint price paid correctly to the mint address?
	8.	Is the mint token HTML correctly formatted and inscribed?
	9.	Has the mint token been verified in the collection database?

If all these checks pass, the mint token is valid, and the NFT can be considered officially minted. This process helps maintain the integrity and authenticity of the rc001 NFT collection.